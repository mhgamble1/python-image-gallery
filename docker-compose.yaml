version: '3.8'
services:
  database:
    image: postgres
    volumes:
      - /mnt/efs/postgres-data:/var/lib/postgresql/data
      # I used this instead of running the app/createDB script from the image gallery container
      # I couldn't get that way to work for some reason
      - ./createDB.sql:/docker-entrypoint-initdb.d/createDB.sql
    environment:
      POSTGRES_USER: image_gallery
      POSTGRES_DB: image_gallery
      POSTGRES_PASSWORD: /run/secrets/ig_password
    secrets:
      - ig_password
    deploy:
      placement:
        constraints: [node.labels.database == yes]

  image_gallery:
    image: mhgamble/image-gallery:latest
    ports:
      - 8888:5555
    deploy:
      mode: replicated
      replicas: 4
    environment:
      PG_HOST: database
      PG_PORT: 5432
      IG_DATABASE: image_gallery
      IG_USER: image_gallery
      IG_PASSWD: /run/secrets/ig_password
      FLASK_APP: app.py
      FLASK_ENV: development
      FLASK_SESSION_SECRET: /run/secrets/flask_session_key
      AWS_ACCESS_KEY_ID_FILE: /aws_access_key_id
      AWS_SECRET_ACCESS_KEY_FILE: /aws_secret_access_key
    secrets:
      - ig_password
      - flask_session_key
    depends_on:
      - database
    
networks:
  default:
    driver: overlay

secrets:
  ig_password:
    external: true
  flask_session_key:
    external: true
